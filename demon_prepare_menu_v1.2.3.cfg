
###################################################
#######>>>>>>>>>>  3DPrintDemon  <<<<<<<<<<<#######
#######   https://github.com/3DPrintDemon   #######

# NOTE: The load_clean, unload_clean & clean_nozzle macros are in the demon_clean_load.cfg file

# NOTE: See included demon_instructions.md file for copy/paste lines for your Klipperscreen.conf file to create the Prepare menu


[gcode_macro Ready_UP_PLA]
description: Ready the printer for printing PLA
gcode:
  {% set ready_vars = printer["gcode_macro _READYUP_VARIABLES"] %}
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}

    {% if printer.print_stats.state != "standby" %}
      RESPOND TYPE=error MSG="Request denied, current printer state not Standby"

    {% else %}
      {% if start_vars.neopixel_led == True %}
        STATUS_HEATING
      {% endif %}

      {% if start_vars.chamber_fan == True %}
        SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=28
      {% endif %}
    
      SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ready_vars.ready_up_pla_bed}
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={ready_vars.ready_up_pla_noz}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={ready_vars.ready_up_pla_noz - 2} MAXIMUM={ready_vars.ready_up_pla_noz + 5}
      _CONDITIONAL_HOME

      _CONDITIONAL_CLEAN
    {% endif %}



[gcode_macro Ready_UP_ASA]
description: Ready the printer for printing ASA
gcode:
  {% set ready_vars = printer["gcode_macro _READYUP_VARIABLES"] %}
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}

    {% if printer.print_stats.state != "standby" %}
      RESPOND TYPE=error MSG="Request denied, current printer state not Standby"

    {% else %}
      {% if start_vars.neopixel_led == True %}
        STATUS_HEATING
      {% endif %}

      {% if start_vars.chamber_fan == True %}
        SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=55
      {% endif %}
    
      SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ready_vars.ready_up_asa_bed}
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={ready_vars.ready_up_asa_noz}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={ready_vars.ready_up_asa_noz - 2} MAXIMUM={ready_vars.ready_up_asa_noz + 5}
      _CONDITIONAL_HOME

      _CONDITIONAL_CLEAN
    {% endif %}



[gcode_macro Ready_UP_PETG]
description: Ready the printer for printing PETG
gcode:
  {% set ready_vars = printer["gcode_macro _READYUP_VARIABLES"] %}
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}

    {% if printer.print_stats.state != "standby" %}
      RESPOND TYPE=error MSG="Request denied, current printer state not Standby"

    {% else %}
      {% if start_vars.neopixel_led == True %}
        STATUS_HEATING
      {% endif %}

      {% if start_vars.chamber_fan == True %}
        SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=28
      {% endif %}
    
      SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ready_vars.ready_up_petg_bed}
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={ready_vars.ready_up_petg_noz}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={ready_vars.ready_up_petg_noz - 2} MAXIMUM={ready_vars.ready_up_petg_noz + 5}
      _CONDITIONAL_HOME

      _CONDITIONAL_CLEAN
    {% endif %}



[gcode_macro Ready_UP_TPU]
description: Ready the printer for printing TPU
gcode:
  {% set ready_vars = printer["gcode_macro _READYUP_VARIABLES"] %}
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}

    {% if printer.print_stats.state != "standby" %}
      RESPOND TYPE=error MSG="Request denied, current printer state not Standby"

    {% else %}
      {% if start_vars.neopixel_led == True %}
        STATUS_HEATING
      {% endif %}

      {% if start_vars.chamber_fan == True %}
        SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=28
      {% endif %}
    
      SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ready_vars.ready_up_tpu_bed}
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={ready_vars.ready_up_tpu_noz}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={ready_vars.ready_up_tpu_noz - 2} MAXIMUM={ready_vars.ready_up_tpu_noz + 5}
      _CONDITIONAL_HOME

      _CONDITIONAL_CLEAN
    {% endif %}



[gcode_macro Ready_UP_CUSTOM]
description: Ready the printer for printing with your settings
gcode:
  {% set ready_vars = printer["gcode_macro _READYUP_VARIABLES"] %}
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  {% set noz = params.NOZZLE|default(160)|int %}
  {% set bed = params.BED|default(60)|int %} 
  {% set chamber = params.CHAMBER_FAN|default(50)|int %}
  {% set timeout = params.IDLE_TIMEOUT_MINUTES|default(60)|int %}
  {% set park = params.PARK_OVER_BED|default('Yes')|string %}

    {% if printer.print_stats.state != "standby" %}
      RESPOND TYPE=error MSG="Request denied, current printer state not Standby"

    {% else %}
      {% if start_vars.neopixel_led == True %}
        STATUS_HEATING
      {% endif %}

        SET_IDLE_TIMEOUT TIMEOUT={timeout * 60}

      {% if start_vars.chamber_fan == True %}
        SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET={chamber}
      {% endif %}
    
      SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed}
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={noz}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={noz - 2} MAXIMUM={noz + 5}M109 S{noz}
      _CONDITIONAL_HOME

      _CONDITIONAL_CLEAN

      {% if park|lower in ['yes', 'true'] %}
      _Z_PARK
      {% endif %}
      
    {% endif %}



[gcode_macro HEATSOAK_TOGGLE]
description: Toggle the PRINT_START Heatsoaks on & off with each click of this button! State must be set BEFORE you start a print!
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}

  {% if start_vars.start_my_print_already == False %}
    RESPOND TYPE=error MSG="PRINT_START HEATSOAKS WILL NOW BE SKIPPED!"
    SET_GCODE_VARIABLE MACRO=_START_VARIABLES VARIABLE=start_my_print_already VALUE=True

  {% elif start_vars.start_my_print_already == True %}
    RESPOND TYPE=error MSG="PRINT_START HEATSOAKS ARE NOW ACTIVE!"
    SET_GCODE_VARIABLE MACRO=_START_VARIABLES VARIABLE=start_my_print_already VALUE=False
  {% endif %}
      


[gcode_macro PRESENT_TOOLHEAD]
description: Moves the toolhead to a position for easy access & maintance 
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  {% set x_present = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_present = printer.toolhead.axis_minimum.y|float + 25 %}
  {% set z_present = printer.toolhead.axis_maximum.z|float / 2 %}

    {% if printer.print_stats.state != "standby" %}
      RESPOND TYPE=error MSG="Present Toolhead request denied, current printer state not Standby"

    {% else %}
      _CONDITIONAL_HOME
      {% if start_vars.present_use_default == True %}
        G0 X{x_present} Y{y_present} Z{z_present} F{start_vars.present_speed * 60}
      {% else %}
        {% if start_vars.present_toolhead_z|float < printer.toolhead.axis_maximum.z|float - 35 and 
          start_vars.present_toolhead_z|float > printer.toolhead.axis_minimum.z|float + 5 %}
          G0 X{start_vars.present_toolhead_x} Y{start_vars.present_toolhead_y} Z{start_vars.present_toolhead_z} F{start_vars.present_speed * 60}

        {% else %}
          RESPOND TYPE=error MSG="Present Toolhead request denied, present_toolhead_z variable set not in accepted range. Please set above 5mm & 35mm less than max Z in the demon_user_settings file."
        {% endif %}
      
      {% endif %}
        
      {% if start_vars.neopixel_led == True %}
        STATUS_READY
      {% endif %}

      _SAVE
        
    {% endif %}

    

[gcode_macro STOW_TOOLHEAD]
description: Stows the toolhead back to a parking position. Uses the ready_vars.park_x/y/z variables in the demon_user_settings file!
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}

    {% if printer.print_stats.state != "standby" %}
      RESPOND TYPE=error MSG="Stow Toolhead request denied, current printer state not Standby"

    {% else %}
      {% if start_vars.stow_toolhead_z in range (5, 51) %}
        _CONDITIONAL_HOME
        G0 X{start_vars.stow_toolhead_x|float} Y{start_vars.stow_toolhead_y|float} Z{start_vars.stow_toolhead_z|int} F{start_vars.stow_speed|int * 60}
        {% if start_vars.neopixel_led == True %}
          STATUS_READY
        {% endif %}

        _SAVE
        
      {% else %}
        RESPOND TYPE=error MSG="Stow Toolhead request denied, stow_toolhead_z variable not in accepted range. Please set between 5-50mm in the demon_user_settings file."
      {% endif %}

  {% endif %}
  

[gcode_macro _PREPARE_MENU_VERSION]
variable_demon_prepare_menu: "1.2.3"
gcode:


