
###################################################
#######>>>>>>>>>>  3DPrintDemon  <<<<<<<<<<<#######
#######   https://github.com/3DPrintDemon   #######


# DONT PLAY WITH THINGS HERE UNLESS YOU KNOW WHAT YOURE DOING, BAD THINGS CAN HAPPEN IF YOU BREAK STUFF :-0


[gcode_macro PRINT_START]
gcode:
# Do not edit this section, this gets the info from the print file
  {% set first_layer_bed = params.BED|int %}
  {% set first_layer_extruder = params.EXTRUDER|float %}
  {% set layer_height = params.LAYER|default(0.2)|float %}
  {% set filament_type = params.FILAMENT|default('PLA')|string %}
  {% set exclude_object = params.EXCLUDE|default(0)|int %} 
  {% set oapa = params.OAPA|default(0)|int %}
  {% set surface = params.SURFACE|default('High Temp Plate')|string %}

  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  {% set ceal = printer["gcode_macro CUSTOM_EXPANSION_ACTIVE_LIST"] %}

  
## PREPARE ####################################################################################################################################

    _DEMON_VERSION

  {% if ceal.ceal_master_enable == True %}
    {% if ceal.pre_start == True %}
      _CUSTOM_PRE_START {rawparams}
    {% endif %}
  {% endif %}

  {% if start_vars.orca_enable == True %}
    SET_GCODE_VARIABLE MACRO=_APA_VARS VARIABLE=fil_type VALUE='"{filament_type}"'
    SET_GCODE_VARIABLE MACRO=_APA_VARS VARIABLE=oapa VALUE={oapa}
    
    _APA_SET
  {% endif %}

    SET_GCODE_VARIABLE MACRO=_CORE_VARS VARIABLE=filament VALUE='"{filament_type}"'
    SET_GCODE_VARIABLE MACRO=_CORE_VARS VARIABLE=layer VALUE='"{layer_height}"'
    SET_GCODE_VARIABLE MACRO=_CORE_VARS VARIABLE=bed VALUE='"{first_layer_bed}"'
    SET_GCODE_VARIABLE MACRO=_CORE_VARS VARIABLE=noz VALUE='"{first_layer_extruder}"'

  {% if filament_type not in ['PLA', 'PLA+'] %}
    SET_GCODE_VARIABLE MACRO=_CORE_VARS VARIABLE=offset_reset VALUE=True
  {% endif %}

  {% if start_vars.orca_enable == True %}
    {% if start_vars.adaptive_meshing == True and exclude_object != 1%}
      {action_raise_error("This error is caused by the sliced file not having LABEL_OBJECT enabled or by your slicer's start Gcode not being setup correclty! Please disable Adaptive_Meshing in the demon_user_settings.cfg or re-slice the file with it enabled or your start Gcode corrected and restart the print!")}
    {% endif %}
  {% endif %}
  
  {% if start_vars.printer_lights == True %}  
    {% if printer["Printer_Lights"] != start_vars.printer_lights_print %}
      SET_PIN PIN=Printer_Lights VALUE={start_vars.printer_lights_print}
    {% endif %}
  {% endif %}

  {% if start_vars.neopixel_led == True %}
    STATUS_BUSY
  {% endif %}

## STATE RESET TO PRINT ############################################################################################################################
    
    G90 # Use absoulte coordinates
    M83 # Extruder relative mode
    M220 S100 # reset feed rate to 100 percent
    M221 S100 # reset flow rate to 100 percent
    SET_VELOCITY_LIMIT ACCEL={printer.configfile.config.printer.max_accel}
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.config.printer.max_velocity}
  {% if 'mcu eddy' not in printer and 'probe_eddy_current btt_eddy' not in printer %}
    SET_GCODE_OFFSET Z=0.0 # Reset the G-Code Z offset
  {% endif %}
    BED_MESH_CLEAR # Clears currently loaded mesh    

## INITIAL SETUP ############################################################################################################################

    _INITIAL_SETUP # Set flow & static pressure advance / smooth time
    _CHAMBER_SENSOR_DEFINE
    M400
    _CHAMBER_TEMPS_HELPER

## FILAMENT STATE CHECK ############################################################################################################################

    _RUNOUT_SENSOR_CHECK
                              
  {% if start_vars.encoder_runout_sensor == True %}
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
    UPDATE_DELAYED_GCODE ID=_ENCODER_RUNOUT_CONTROL DURATION=10 
  {% endif %}
  
## INITIAL BED HEATING ############################################################################################################################

  {% if ceal.ceal_master_enable == True %}
    {% if ceal.pre_heating == True %}
      _CUSTOM_PRE_HEATING {rawparams}
    {% endif %}
  {% endif %}

  {% if start_vars.neopixel_led == True %} 
    STATUS_HEATING
  {% endif %}
   
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={first_layer_bed} 

## NOZZLE PREHEATING ############################################################################################################################
  
    _NOZZLE_PREHEAT_CONTROL
    M400

## CHAMBER HEATING SETUP ###########################################################################################################################

  {% if start_vars.chamber_heater == True %}
    _CHAMBER_HEATER_SETUP
    M400
    _CHAMBER_HEATER_READ
    _CHAMBER_HEATER_MONITOR
    UPDATE_DELAYED_GCODE ID=_CHAMBER_HEAT_CONTROL DURATION=1
  {% endif %}

## BED FANS SETTINGS ##############################################################################################################################

  {% if start_vars.bed_fans == True %}
    _BED_FANS_SETUP
    M400
    _BED_FAN_SET
  {% endif %}

## NEVERMORE START SETTING ##############################################################################################################################

  {% if start_vars.nevermore == True %}

    {% if filament_type in ['PLA', 'PLA+'] %} 
      SET_FAN_SPEED FAN=Nevermore SPEED={start_vars.pla_nevermore_start_speed}

    {% elif filament_type == 'ASA' %} 
      SET_FAN_SPEED FAN=Nevermore SPEED={start_vars.asa_nevermore_start_speed}

    {% elif filament_type == 'ABS' %} 
      SET_FAN_SPEED FAN=Nevermore SPEED={start_vars.abs_nevermore_start_speed}

    {% elif filament_type in ['PET', 'PETG'] %} 
      SET_FAN_SPEED FAN=Nevermore SPEED={start_vars.petg_nevermore_start_speed}

    {% elif filament_type in ['FLEX', 'TPU'] %} 
      SET_FAN_SPEED FAN=Nevermore SPEED={start_vars.tpu_nevermore_start_speed}

    {% else %}
      SET_FAN_SPEED FAN=Nevermore SPEED={start_vars.default_nevermore_start_speed}
    {% endif %}
  {% endif %}
  
## HOMING ############################################################################################################################

  {% if ceal.ceal_master_enable == True %}
    {% if ceal.pre_homing == True %}
      _CUSTOM_PRE_HOMING {rawparams}
    {% endif %}
  {% endif %}

    _HOMING_HELPER
    _FIRST_CLEAN
   
## BED TEMP WAITS & TIMERS ############################################################################################################################

  {% if ceal.ceal_master_enable == True %}
    {% if ceal.pre_bed_heating_wait == True %}
      _CUSTOM_PRE_BED_HEATING_WAIT {rawparams}
    {% endif %}
  {% endif %}
  
  {% if start_vars.neopixel_led == True %}
    STATUS_HEATING 
  {% endif %}

  {% if first_layer_bed != 0 %}
    SET_DISPLAY_TEXT MSG="Waiting For Bed Temp: {first_layer_bed}c"                
    RESPOND TYPE=COMMAND MSG="Waiting For Bed Temp: {first_layer_bed}c"             
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={first_layer_bed} 
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={first_layer_bed|int -2} MAXIMUM={first_layer_bed|int + 5}
    RESPOND TYPE=COMMAND MSG="Bed Temp Reached"

  {% else %}
    SET_DISPLAY_TEXT MSG="Bed target is 0c, waiting for bed temp bypassed!"
    RESPOND TYPE=COMMAND MSG="Bed target is 0c, waiting for bed temp bypassed!"
  {% endif %}

  {% if start_vars.bed_fans == True %}
    _BED_FAN_SET
    M400
  {% endif %}

  {% if start_vars.chamber_heater == True %}
    _CHAMBER_HEATER_MONITOR
  {% endif %}

  {% if start_vars.start_my_print_already == False %}
    {% if first_layer_bed == 0 %}
      SET_DISPLAY_TEXT MSG="Bed target is 0c, all timers & waits bypassed!"
      RESPOND TYPE=COMMAND MSG="Bed target is 0c, all timers & waits bypassed!"
    {% else %}
      _START_WAIT_AND_TIMER_HANDLING
    {% endif %}
    
  {% else %}
    SET_DISPLAY_TEXT MSG="Start my print already is active! I'm in a rush, bypassing heat soak commands!"
    RESPOND TYPE=COMMAND MSG="Start my print already is active! I'm in a rush, bypassing heat soak commands!"
  {% endif %}
 
  {% if start_vars.bed_fans == True %}
    _BED_FAN_SET
  {% endif %}

  {% if start_vars.chamber_heater == True %}
    _CHAMBER_HEATER_MONITOR
  {% endif %}

## GANTRY LEVELLING ############################################################################################################################

  {% if ceal.ceal_master_enable == True %}
    {% if ceal.pre_level == True %}
      _CUSTOM_PRE_LEVEL {rawparams}
    {% endif %}
  {% endif %}

  # {% if start_vars.start_my_print_already == False %}
  #   _CONDITIONAL_CLEAN
  #   G28 Z
  # {% endif %}

  {% if ('buffer_stepper filament_buffer' in printer.configfile.config) %}
    _OFFSET_FORCE_OVERLAY
  {% endif %}
  
    _ADAPTIVE_LEVELLING
    _CONDITIONAL_CLEAN
    G28 Z

## EDDY NG TAP ###################################################################################################################################

  {% if 'probe_eddy_ng btt_eddy' in printer.configfile.config %}
    _EDDY_NG_TAP
  {% endif %}

## STORED BED MESH OR ADAPTIVE ##########################################################################################################################

  {% if ceal.ceal_master_enable == True %}
    {% if ceal.pre_mesh == True %}
      _CUSTOM_PRE_MESH {rawparams}
    {% endif %}
  {% endif %}

    _MESH_HANDLING
     
## APPLY OFFSET ADJUSTMENTS ############################################################################################################################

## Use with EXTREME caution!! Manual G-Code Z offset override!

  {% if start_vars.orca_enable == True %}
    SET_GCODE_VARIABLE MACRO=_CORE_VARS VARIABLE=orca_surface VALUE='"{surface}"'
    _ORCA_MULTI_SURFACE_HANDLING
  {% endif %}

    _Z_OFFSET_HANDLING

## MOVE TO START POSITION & READY ############################################################################################################################

  {% if start_vars.adaptive_meshing == True or start_vars.use_kamp_smart_park == True %}
    SMART_PARK

  {% else %}
    _START_POS
  {% endif %}
    
    # Heats up the nozzle up to target via data from slicer
    SET_DISPLAY_TEXT MSG="Heating Hotend: {first_layer_extruder}c"
    RESPOND TYPE=COMMAND MSG="Heating Hotend: {first_layer_extruder}c"
    
  {% if start_vars.neopixel_led == True %}
    STATUS_HEATING 
  {% endif %}
                                                 
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={first_layer_extruder} 
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={first_layer_extruder|float -2} MAXIMUM={first_layer_extruder|float + 5}
    
  ## NEVERMORE PRINT SETTING ##############################################################################################################################

  {% if start_vars.nevermore == True %}

    {% if filament_type in ['PLA', 'PLA+'] %} 
      SET_FAN_SPEED FAN=Nevermore SPEED={start_vars.pla_nevermore_print_speed}

    {% elif filament_type == 'ASA' %} 
      SET_FAN_SPEED FAN=Nevermore SPEED={start_vars.asa_nevermore_print_speed}

    {% elif filament_type == 'ABS' %} 
      SET_FAN_SPEED FAN=Nevermore SPEED={start_vars.abs_nevermore_print_speed}

    {% elif filament_type in ['PET', 'PETG'] %} 
      SET_FAN_SPEED FAN=Nevermore SPEED={start_vars.petg_nevermore_print_speed}

    {% elif filament_type in ['FLEX', 'TPU'] %} 
      SET_FAN_SPEED FAN=Nevermore SPEED={start_vars.tpu_nevermore_print_speed}

    {% else %}
      SET_FAN_SPEED FAN=Nevermore SPEED={start_vars.default_nevermore_print_speed}
    {% endif %}
  {% endif %}

## PRINT PURGE LINES ############################################################################################################################

  {% if ceal.ceal_master_enable == True %}
    {% if ceal.pre_print == True %}
      _CUSTOM_PRE_PRINT {rawparams}
    {% endif %}
  {% endif %}

  {% if start_vars.neopixel_led == True %}
    STATUS_PRINTING
  {% endif %}

    _PURGE_LINES

  {% if start_vars.chamber_heater == True %}
    UPDATE_DELAYED_GCODE ID=_CHAMBER_HEAT_CONTROL DURATION=2
    RESPOND TYPE=COMMAND MSG="Chamber Heater Monitor Active"
  {% endif %}

  {% if start_vars.bed_fans == True %}
    UPDATE_DELAYED_GCODE ID=_BED_FAN_MONITOR DURATION=1
    RESPOND TYPE=COMMAND MSG="Bed Fans Monitor Active"
  {% endif %}

  {% if ('buffer_stepper filament_buffer' in printer.configfile.config) %}
    NOZZLE_CLOG_CHECK
  {% endif %}

  

#######################################################
# Used to finish your print & leave your printer in a safe state
#######################################################

[gcode_macro PRINT_END]
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  {% set core_vars = printer["gcode_macro _CORE_VARS"] %}
  {% set bed_fan_vars = printer["gcode_macro _BED_FAN_VARS"] %}
  {% set ceal = printer["gcode_macro CUSTOM_EXPANSION_ACTIVE_LIST"] %}

  {% if ceal.ceal_master_enable == True %}
    {% if ceal.pre_end == True %}
      _CUSTOM_PRE_END {rawparams}
    {% endif %}
  {% endif %} 

    G91 # RELATIVE POSITIONING
    G1 E-2 F2700 # RETRACT A BIT
    G1 E-2 Z0.2 F2400 # RETRACT AND RAISE Z
    G0 X5 Y5 F12000 # WIPE OUT
    G90 # ABSOLUTE POSITIONING

  {% if start_vars.encoder_runout_sensor == True %}
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
  {% endif %}
  
  {% if printer.toolhead.position.z|float < 50 %}
    G0 Z50 F3600
  {% endif %}

    _OFFSET_RESET_CONTROL
  
  {% if start_vars.chamber_heater == True %}
    UPDATE_DELAYED_GCODE ID=_CHAMBER_HEAT_CONTROL DURATION=0
    RESPOND TYPE=COMMAND MSG="Chamber Heater Monitor deactivated, heater off"
    {% if start_vars.heater_neo == True %}
      SET_LED LED="Chamber_Heater_Neopixel" RED=1.0 GREEN=0.0 BLUE=1.0 WHITE=0 SYNC=0 TRANSMIT=1
    {% endif %}
  {% endif %}
  
    TURN_OFF_HEATERS
  
  {% if start_vars.chamber_fan == True %}
    SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={start_vars.post_print_cool}    
  {% endif %}

    SET_DISPLAY_TEXT MSG="Print Complete!"
    RESPOND TYPE=COMMAND MSG="Print Complete!"
    _TOOLHEAD_PARK_PAUSE_CANCEL # park head & present print

    M84       # DISABLE STEPPERS 
    M220 S100 # reset feed rate to 100 percent
    M221 S100 # reset flow rate to 100 percent
    SET_VELOCITY_LIMIT ACCEL={printer.configfile.config.printer.max_accel}
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.config.printer.max_velocity}

    BED_MESH_CLEAR
   
  {% if start_vars.nevermore == True %}
    _NEVERMORE_POST_PRINT                           
  {% endif %}

  {% if ceal.ceal_master_enable == True %}
    {% if ceal.pre_shutdown == True %}
      _CUSTOM_PRE_SHUTDOWN {rawparams}
    {% endif %}
  {% endif %}
  
  {% if start_vars.shutdown_relay == True %} 
    {% if printer["output_pin PRINTER_AUTO_OFF"].value == 1.0 %}
      _GOODNIGHT
   
    {% else %}
      M107 # kill fan
      M117
      {% if start_vars.neopixel_led == True %}
        STATUS_READY
      {% endif %}    
    {% endif %}

  {% else %}
    M107 # kill fan
    M117
    {% if start_vars.neopixel_led == True %}
      STATUS_READY
    {% endif %}
  {% endif %}

  {% if start_vars.printer_lights == True %}  
    {% if printer["Printer_Lights"] != start_vars.printer_lights_finish %}
      SET_PIN PIN=Printer_Lights VALUE={start_vars.printer_lights_finish}
      {% if start_vars.neopixel_led == True and start_vars.neopixel_off == True %}
      status_off
      {% endif %} 
    {% endif %}
  {% endif %}

  {% if ceal.ceal_master_enable == True %}
    {% if ceal.post_end == True %}
      _CUSTOM_POST_END {rawparams}
    {% endif %}
  {% endif %}
  
; total layers count = [total_layer_count]




#######################################################
# Use this macro to calibrate your retractoin settings when using the generated files from http://www.retractioncalibration.com/
# All you need do is paste "_RET_CALI_START" into the website's "Custom Gcode" box next to the green "Generate Gcode" button
#######################################################

[gcode_macro _RET_CALI_START]
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}

    _CHAMBER_SENSOR_DEFINE
    
  {% if start_vars.bed_fans == True %}
    _BED_FANS_SETUP
    M400
    _BED_FAN_SET
  {% endif %}
  
    G90
    M83
    SET_GCODE_OFFSET Z=0.0
    BED_MESH_CLEAR
    _CONDITIONAL_CLEAN
    G28 Z
    _ADAPTIVE_LEVELLING
  
    _CONDITIONAL_CLEAN
    G28 Z

  {% if start_vars.adaptive_meshing == True %}
    {% if ('mcu eddy' in printer.configfile.config) or ('probe_eddy_current btt_eddy' in printer) or ('probe_eddy_current eddy' in printer) %}
      BED_MESH_CALIBRATE METHOD=rapid_scan ADAPTIVE=1 ADAPTIVE_MARGIN=10
    {% else %}
      BED_MESH_CALIBRATE ADAPTIVE=1 ADAPTIVE_MARGIN=10
    {% endif %}

  {% else %}
    BED_MESH_PROFILE LOAD="default"
  {% endif %}

  {% if start_vars.neopixel_led == True %}
    STATUS_PRINTING
  {% endif %}

  {% if start_vars.adaptive_meshing == True or start_vars.use_kamp_smart_park == True %}
    SMART_PARK

  {% else %}
    _START_POS
  {% endif %}

  {% if start_vars.neopixel_led == True %}
    STATUS_PRINTING
  {% endif %}

    _PURGE_LINES

  {% if start_vars.chamber_heater == True %}
    _CHAMBER_HEATER_SETUP
    M400
    UPDATE_DELAYED_GCODE ID=_CHAMBER_HEAT_CONTROL DURATION=1
    RESPOND TYPE=COMMAND MSG="Chamber Heater Monitor Active"
  {% endif %}

  {% if start_vars.bed_fans == True %}
    UPDATE_DELAYED_GCODE ID=_BED_FAN_MONITOR DURATION=1
    RESPOND TYPE=COMMAND MSG="Bed Fans Monitor Active"
  {% endif %}

  M82
  G92 E0



[gcode_macro _PRINT_START_VERSION]
variable_demon_start_ver: "2.9.7"
gcode:


