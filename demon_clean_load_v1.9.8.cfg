
###################################################
#######>>>>>>>>>>  3DPrintDemon  <<<<<<<<<<<#######
#######   https://github.com/3DPrintDemon   #######

# Macro set includes all NEW fully automated LOAD/UNLOAD_CLEAN macros for one click loading & unloading followed 
# by nozzle cleaning & cooldown, customise all macros via variables, plus selectable temps & load speeds!

# CHECK YOUR VALUES ARE CORRECT BEFORE USE, THIS IS VITAL & TOTALLY ON YOU!

# DO NOT BLINDLY USE THESE DEFAULTS!!

# USE THESE MACROS AT OWN RISK! 

# DONT CRY TO ME IF YOU DIDN'T CHECK/CHANGE VALUES & YOU BREAK THINGS!



[gcode_macro LOAD_FILAMENT]
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  {% set core_vars = printer["gcode_macro _CORE_VARS"] %}
  {% set ceal = printer["gcode_macro CUSTOM_EXPANSION_ACTIVE_LIST"] %}
  {% set speed = params.SPEED_MMsec|default(7)|float * 60 %}
  {% set temp = params.TEMP|default(250)|int %}
  {% set cool = params.COOL|default('No')|string %}
  {% set cool_temp = params.COOL_TEMP|default(150)|int %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity|int * 60 %}

  {% if ('buffer_stepper filament_buffer' in printer.configfile.config) and core_vars.prompt_running == True %} ####################
    RESPOND TYPE=command MSG="action:prompt_end"
  {% endif %}
  
    _MAX_EXTRUDE_CHECK
    
    SAVE_GCODE_STATE NAME=load_state

    _ENCODER_FEED_CHECK_PREP
    M400
    
  {% if ceal.ceal_master_enable == True %}
    {% if ceal.pre_load == True %}
      _CUSTOM_PRE_LOAD {rawparams}
    {% endif %}
  {% endif %}

  {% if printer.print_stats.state not in ['printing', 'paused'] %} #and (printer.extruder.target <= printer.configfile.settings['extruder'].min_extrude_temp) %}
    {% if "xyz" not in printer.toolhead.homed_axes %}
      {% if core_vars.last_known_z|float < 50|float %}
        Z_ASCENDER HEIGHT={(50 - core_vars.last_known_z|float)}
      {% endif %}

    {% else %}
      {% if printer.toolhead.position.z|float < start_vars.filament_change_park_min_z|float %}
        G90
        G0 Z{start_vars.filament_change_park_min_z|float} F3600
      {% endif %}
      G0 X{start_vars.filament_change_park_x|float} Y{start_vars.filament_change_park_y|float} F9000
    {% endif %}
      
    {% if 'TEMP' not in params %}
      {% if (printer.extruder.target == 0) or (printer.extruder.target < printer.configfile.settings['extruder'].min_extrude_temp) %}
        SET_DISPLAY_TEXT MSG="Load hotend heating..."
        RESPOND TYPE=COMMAND MSG="Load hotend heating..."
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp} 
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp|int -2} MAXIMUM={temp|int + 5}
        M117
      
      {% elif printer.extruder.target != 0 and printer.extruder.target >= printer.configfile.settings['extruder'].min_extrude_temp %}
        SET_DISPLAY_TEXT MSG="Loading hotend..."
        RESPOND TYPE=COMMAND MSG="Loading hotend..."
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={printer.extruder.target|int -2} MAXIMUM={printer.extruder.target|int + 5} 
      {% endif %}

    {% else %}
      SET_DISPLAY_TEXT MSG="Load hotend heating to {temp}c"
      RESPOND TYPE=COMMAND MSG="Load hotend heating to {temp}c"
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp} 
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp|int -2} MAXIMUM={temp|int + 5}
    {% endif %}
  {% endif %}
     
    M83
    G92 E0
    G1 E{start_vars.load_length|float} F{max_velocity|int}
    M400
    _ENCODER_FEED_CHECK
      
    G1 E{start_vars.load_purge_length|float} F{speed|int}

  {% if ('buffer_stepper filament_buffer' in printer.configfile.config) and core_vars.prompt_running == True %} ####################
    {% if printer.print_stats.state not in ['printing', 'paused'] %}
      RESPOND TYPE=COMMAND MSG="Filament loaded via auto feeder, reducing nozzle temp to {cool_temp}"
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={cool_temp}
    {% endif %}
    
    SET_GCODE_VARIABLE MACRO=_CORE_VARS VARIABLE=prompt_running VALUE=False
  {% endif %}  

  {% if cool|lower in ['yes', 'true'] %}
    {% if printer.print_stats.state not in ['printing', 'paused'] and (temp >= printer.configfile.settings['extruder'].min_extrude_temp) %}
      SET_DISPLAY_TEXT MSG="Post load hotend cooling..."
      RESPOND TYPE=COMMAND MSG="Post load hotend cooling..."
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={cool_temp} 
      # {% if printer.extruder.target >= 50|int %}
      #   TEMPERATURE_WAIT SENSOR=extruder MINIMUM={cool_temp|int -2} MAXIMUM={cool_temp|int + 5}
      # {% endif %}
      M117

    {% elif printer.print_stats.state in ['printing', 'paused'] %}
      SET_DISPLAY_TEXT MSG="Load cooling denied, print in progress!"
      RESPOND TYPE=COMMAND MSG="Load cooling denied, print in progress!"
    {% endif %} 
  {% endif %}

  {% if ceal.ceal_master_enable == True %}
    {% if ceal.post_load == True %}
       _CUSTOM_POST_LOAD {rawparams}
    {% endif %}
  {% endif %}

    SET_GCODE_VARIABLE MACRO=_POOP_VARIABLES VARIABLE=loaded_already VALUE=True
    SAVE_VARIABLE VARIABLE=loaded_state VALUE=True
    RESTORE_GCODE_STATE NAME=load_state
  {% if "xyz" in printer.toolhead.homed_axes %}
    _SAVE
  {% endif %}

    M400
    SET_DISPLAY_TEXT MSG="LOAD_FILAMENT operation complete!"
    RESPOND TYPE=ECHO MSG="LOAD_FILAMENT operation complete!"



[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  {% set core_vars = printer["gcode_macro _CORE_VARS"] %}
  {% set ceal = printer["gcode_macro CUSTOM_EXPANSION_ACTIVE_LIST"] %}
  {% set speed = params.SPEED_MMsec|default(7)|float * 60 %}
  {% set temp = params.TEMP|default(250)|int %}
  {% set cool = params.COOL|default('No')|string %}
  {% set cool_temp = params.COOL_TEMP|default(150)|int %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity|int * 60 %}

    _MAX_EXTRUDE_CHECK
    
    SAVE_GCODE_STATE NAME=unload_state

    _ENCODER_FEED_CHECK_PREP
    M400
    
  {% if ceal.ceal_master_enable == True %}
    {% if ceal.pre_unload == True %}
      _CUSTOM_PRE_UNLOAD {rawparams}
    {% endif %}
  {% endif %}

  {% if printer.print_stats.state not in ['printing', 'paused'] %} #and (printer.extruder.target <= printer.configfile.settings['extruder'].min_extrude_temp) %}
    {% if "xyz" not in printer.toolhead.homed_axes %}
      {% if core_vars.last_known_z|float < 50|float %}
        Z_ASCENDER HEIGHT={(50 - core_vars.last_known_z|float)}
      {% endif %}

    {% else %}
      {% if printer.toolhead.position.z|float < start_vars.filament_change_park_min_z|float %}
        G90
        G0 Z{start_vars.filament_change_park_min_z|float} F3600
      {% endif %}
      G0 X{start_vars.filament_change_park_x|float} Y{start_vars.filament_change_park_y|float} F9000
    {% endif %}
  
    {% if 'TEMP' not in params %}
      {% if (printer.extruder.target == 0) or (printer.extruder.target < printer.configfile.settings['extruder'].min_extrude_temp) %}
        SET_DISPLAY_TEXT MSG="Unload hotend heating..."
        RESPOND TYPE=COMMAND MSG="Unload hotend heating..."
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp} 
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp|int -2} MAXIMUM={temp|int + 5}
        M117
      
      {% elif printer.extruder.target != 0 and printer.extruder.target >= printer.configfile.settings['extruder'].min_extrude_temp %}
        SET_DISPLAY_TEXT MSG="Unloading hotend..."
        RESPOND TYPE=COMMAND MSG="Unloading hotend..."
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={printer.extruder.target|int -2} MAXIMUM={printer.extruder.target|int + 5} 
      {% endif %}

    {% else %}
      SET_DISPLAY_TEXT MSG="Unload hotend heating to {temp}c"
      RESPOND TYPE=COMMAND MSG="Unload hotend heating to {temp}c"
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp} 
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp|int -2} MAXIMUM={temp|int + 5}
    {% endif %}
  {% endif %}

    M83
    G92 E0
    G1 E{start_vars.unload_purge_length|float} F{max_velocity|int}
    
     _ENCODER_FEED_CHECK

  {% if ('buffer_stepper filament_buffer' in printer.configfile.config) %} ####################
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=True
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=False
    M400
    G1 E-5 F{max_velocity|int}
    BUFFER_STEPPER STEPPER=filament_buffer MOVE=-5 SPEED={max_velocity|int / 60} SYNC=1
    M400
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=False
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=True

  {% else %}
    G1 E-5 F{max_velocity|int}
  {% endif %}

    G4 P5000
    M400

  {% if ('buffer_stepper filament_buffer' in printer.configfile.config) %} ####################
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=True
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=False
    M400
    G1 E-{start_vars.unload_length|float} F{max_velocity|int}
    BUFFER_STEPPER STEPPER=filament_buffer MOVE=-{start_vars.unload_length|float} SPEED={max_velocity|int / 60} SYNC=1
    M400
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=False
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=True

  {% else %}
    G1 E-{start_vars.unload_length|float} F{max_velocity|int}
  {% endif %}

    M400

  {% if cool|lower in ['yes', 'true'] %}
    {% if printer.print_stats.state not in ['printing', 'paused'] and (temp >= printer.configfile.settings['extruder'].min_extrude_temp) %}
      SET_DISPLAY_TEXT MSG="Post unload hotend cooling..."
      RESPOND TYPE=COMMAND MSG="Post unload hotend cooling..."
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={cool_temp|int} 
      # {% if printer.extruder.target >= 50|int %}
      #   TEMPERATURE_WAIT SENSOR=extruder MINIMUM={cool_temp|int -2} MAXIMUM={cool_temp|int + 5}
      # {% endif %}
      M117

    {% elif printer.print_stats.state in ['printing', 'paused'] %}
      SET_DISPLAY_TEXT MSG="Unload cooling denied, print in progress!"
      RESPOND TYPE=COMMAND MSG="Unload cooling denied, print in progress!"
    {% endif %} 
  {% endif %}

  {% if ceal.ceal_master_enable == True %}
    {% if ceal.post_unload == True %}
      _CUSTOM_POST_UNLOAD {rawparams}
    {% endif %}
  {% endif %}

    SET_GCODE_VARIABLE MACRO=_POOP_VARIABLES VARIABLE=loaded_already VALUE=False
    SAVE_VARIABLE VARIABLE=loaded_state VALUE=False
    RESTORE_GCODE_STATE NAME=unload_state
  {% if "xyz" in printer.toolhead.homed_axes %}
    _SAVE
  {% endif %}

  {% if ('buffer_stepper filament_buffer' in printer.configfile.config) %}  ####################
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=True
    _FEED_OUT_PROMPT
  {% endif %}

    M400
    SET_DISPLAY_TEXT MSG="UNLOAD_FILAMENT operation complete!"
    RESPOND TYPE=ECHO MSG="UNLOAD_FILAMENT operation complete!"


[gcode_macro _FEED_IN_PROMPT]
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}

  {% if printer.print_stats.state in ["printing", "paused"] or start_vars.purge_bucket == False %}
      RESPOND TYPE=command MSG="action:prompt_begin Perform Filament Extruder Load?"
      RESPOND TYPE=command MSG="action:prompt_text Click LOAD to finsh loading filament for printing, or lower feeder push lever and press button above Green LED to resume FEED-IN!"
      RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL|RESPOND TYPE=command MSG=action:prompt_end"
      RESPOND TYPE=command MSG="action:prompt_footer_button LOAD|LOAD_FILAMENT|error"
      RESPOND TYPE=command MSG="action:prompt_show"

  {% else %}
      RESPOND TYPE=command MSG="action:prompt_begin Perform Filament Extruder Load?"
      RESPOND TYPE=command MSG="action:prompt_text Click LOAD or LOAD_CLEAN to finsh loading filament for printing, or lower feeder push lever and press button above Green LED to resume FEED-IN!"
      RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL|RESPOND TYPE=command MSG=action:prompt_end"
      RESPOND TYPE=command MSG="action:prompt_footer_button LOAD CLEAN|_LOAD_MANAGER|error"
      RESPOND TYPE=command MSG="action:prompt_footer_button LOAD|LOAD_FILAMENT|error"
      RESPOND TYPE=command MSG="action:prompt_show"
  {% endif %}

[gcode_macro _FEED_OUT_PROMPT]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Filament Unload FEED-OUT"
    RESPOND TYPE=command MSG="action:prompt_text Click FEED-OUT to fully retract filament from PTFE Tube."
    RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL|RESPOND TYPE=command MSG=action:prompt_end"
    RESPOND TYPE=command MSG="action:prompt_footer_button FEED-OUT|_FEED_OUT|error"
    RESPOND TYPE=command MSG="action:prompt_show"



[gcode_macro _LOAD_MANAGER]
gcode:
  {% set core_vars = printer["gcode_macro _CORE_VARS"] %}
  
  {% if printer.print_stats.state in ["printing", "paused"] %}
    {% if ('buffer_stepper filament_buffer' in printer.configfile.config) and core_vars.prompt_running == True %} ####################
      RESPOND TYPE=command MSG="action:prompt_end"
      SET_GCODE_VARIABLE MACRO=_CORE_VARS VARIABLE=prompt_running VALUE=False
      RESPOND TYPE=error MSG="It seems you're printing so the LOAD_FILAMENT macro is being used instead!"
      LOAD_FILAMENT
    {% endif %}

  {% else %}
    {% if ('buffer_stepper filament_buffer' in printer.configfile.config) and core_vars.prompt_running == True %} ####################
      RESPOND TYPE=command MSG="action:prompt_end"
      SET_GCODE_VARIABLE MACRO=_CORE_VARS VARIABLE=prompt_running VALUE=False
      LOAD_CLEAN
    {% endif %}
  {% endif %}

  

[gcode_macro _FEED_IN]
gcode:
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=True
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=stop_feeding VALUE=False
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=True
    FEED_LOOP


    
[gcode_macro _FEED_OUT]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=False
    RESPOND TYPE=error MSG="WARNING! FULL FILAMENT FEED-OUT IS ABOUT TO OCCUR IN 10 SECONDS! BE SURE TO TAKE UP SPOOL SLACK!"
    G4 P10000
    RESPOND TYPE=error MSG="WARNING! FULL FILAMENT FEED-OUT!"
    _FEED_OUT_LOOP



[gcode_macro CLEAN_NOZZLE]
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  {% set clean_vars = printer["gcode_macro _CLEAN_VARIABLES"] %}
  {% set poop_vars = printer["gcode_macro _POOP_VARIABLES"] %}
  {% set cool = params.COOL_AFTER_CLEAN|default('Yes')|string %}
  {% set cool_temp = params.COOL_TEMP|default(0)|int %}
  
  {% if clean_vars.have_you_set_this_up != True %}
   {action_raise_error("This error is caused by you not setting up this feature before first use. Check demon_user_settings_cleaner_variables file & set this feature up correctly for your printer!")}
  
  {% else %}

    {% if start_vars.nozzle_cleaner == True %}
      G90
      M83
      {% if printer.print_stats.state not in ['printing', 'paused'] %}
        SET_DISPLAY_TEXT MSG="Heating to clean nozzle {clean_vars.nozzle_pre_temp|int}c"
        RESPOND TYPE=COMMAND MSG="Heating to clean nozzle {clean_vars.nozzle_pre_temp|int}c"
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={clean_vars.nozzle_pre_temp|int}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={clean_vars.nozzle_pre_temp|int - 10} MAXIMUM={clean_vars.nozzle_pre_temp|int + 50}
      {% endif %}
       
      _CONDITIONAL_HOME
    
      {% if start_vars.neopixel_led == True %}
        STATUS_CLEANING
      {% endif %}
    
      {% if clean_vars.random_clean_x == False and clean_vars.random_clean_y == False %}
        {% if printer.toolhead.position.z|float < clean_vars.min_travel_to_clean_z|float %}
          _CLEAN_TRAVEL_SAFETY
        {% endif %}
        
        G0 X{clean_vars.linear_clean_start_x|float} Y{clean_vars.linear_clean_start_y|float} F{clean_vars.clean_travel_speed * 60|int}
        G0 Z{clean_vars.linear_clean_start_z|float} F4000
        M400

        SET_DISPLAY_TEXT MSG="Cleaning Nozzle..." 
        RESPOND TYPE=ECHO MSG="Cleaning Nozzle..." 

        {% if clean_vars.linear_clean_axis in ['X', 'x']|string %}
          {% for passes in range(1, (clean_vars.linear_pass_count)) %}
            _LINEAR_STEP_CONTROL_X
          {% endfor %}

        {% elif clean_vars.linear_clean_axis in ['Y', 'y']|string %}
          {% for passes in range(1, (clean_vars.linear_pass_count)) %}
            _LINEAR_STEP_CONTROL_Y
          {% endfor %}
        {% endif %}

      {% elif clean_vars.random_clean_x == True or clean_vars.random_clean_y == True %}
        {% if printer.toolhead.position.z|float < clean_vars.min_travel_to_clean_z|float %}
          _CLEAN_TRAVEL_SAFETY
        {% endif %}
        
        G0 X{clean_vars.start_x|float} Y{clean_vars.start_y|float} F{clean_vars.clean_travel_speed * 60|int}
        G0 Z{clean_vars.start_z|float} F4000
        M400

        SET_DISPLAY_TEXT MSG="Cleaning Nozzle..." 
        RESPOND TYPE=ECHO MSG="Cleaning Nozzle..." 
      
        {% for passes in range(1, (clean_vars.pass_count)) %}
          _step_control
        {% endfor %}
      {% endif %}

        G0 Z{clean_vars.park_z|float} F4000
      {% if printer.print_stats.state != 'printing' %}
        {% if poop_vars.omit_clean_park == False %}
          G0 X{clean_vars.end_position_x|float} Y{clean_vars.end_position_y|float}
          G0 X{clean_vars.park_x|float} Y{clean_vars.park_y|float} Z{clean_vars.park_z|float} F4000
        {% endif %}
      {% endif %}
        M117
        M400
      {% if start_vars.neopixel_led == True %}
        STATUS_READY
      {% endif %}

      {% if printer.print_stats.state not in ['printing', 'paused'] %}
        {% if cool|lower in ['yes', 'true'] %}
          {% if cool_temp|int > clean_vars.nozzle_pre_temp|int %}
            RESPOND TYPE=COMMAND MSG="Cool down temp is set higher than preheat temp, forcing cool down!"
            RESPOND TYPE=COMMAND MSG="Post nozzle clean cooling to 0c"
            SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0

          {% else %}  
            SET_DISPLAY_TEXT MSG="Post nozzle clean cooling to {cool_temp|int}c"
            RESPOND TYPE=COMMAND MSG="Post nozzle clean cooling to {cool_temp|int}c"
            SET_HEATER_TEMPERATURE HEATER=extruder TARGET={cool_temp}
          {% endif %}
        {% endif %} 
      {% endif %}
  
      _SAVE
      RESPOND TYPE=COMMAND MSG="CLEAN_NOZZLE Operation Complete"
      M117

    {% else %}
      {action_raise_error("This error is caused by the nozzle_cleaner variable not being enabled, check the demon_user_settings file!")}
    {% endif %}

  {% endif %}



[gcode_macro _CLEAN_TRAVEL_SAFETY]
gcode:
  {% set clean_vars = printer["gcode_macro _CLEAN_VARIABLES"] %}

    RESPOND TYPE=COMMAND MSG="Raising Z Axis for travel to cleaner!"
  {% if clean_vars.min_travel_to_clean_z|float <= 2 and clean_vars.min_travel_to_clean_z|float > 0.6 %}
    {% if 'quad_gantry_level' in printer %}
      {% if not printer.quad_gantry_level.applied %}
        RESPOND TYPE=error MSG="NOTE: Levelling system not applied! System override! Travelling at Z10.0 for safety."
        G0 Z10 F3600
      {% else %}
        {% if clean_vars.min_travel_to_clean_z|float <= 1.5 %}
          RESPOND TYPE=error MSG="NOTE: User defined min_travel_to_clean_z is set below 1.5mm - Warning possible bed damage may occur!"
        {% endif %}
        G0 Z{clean_vars.min_travel_to_clean_z|float} F3600
      {% endif %}

    {% elif 'z_tilt' in printer %}
      {% if not printer.z_tilt.applied %}
        RESPOND TYPE=error MSG="NOTE: Levelling system not applied! System override! Travelling at Z10.0 for safety."
        G0 Z10 F3600
      {% else %}
        {% if clean_vars.min_travel_to_clean_z|float <= 1.5 %}
          RESPOND TYPE=error MSG="NOTE: User defined min_travel_to_clean_z is set below 1.5mm - Warning possible bed damage may occur!"
        {% endif %}
        G0 Z{clean_vars.min_travel_to_clean_z|float} F3600
      {% endif %}

    {% else %}
      RESPOND TYPE=error MSG="NOTE: User defined min_travel_to_clean_z at a too low value! System override! Travelling at Z10.0"
      G0 Z10 F3600
    {% endif %}

  {% elif clean_vars.min_travel_to_clean_z|float <= 0.6 %}
    RESPOND TYPE=error MSG="NOTE: User defined min_travel_to_clean_z at a too low value! System override! Travelling at Z10.0"
    G0 Z10 F3600
  {% endif %}



[gcode_macro LOAD_CLEAN]
gcode:  
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  {% set core_vars = printer["gcode_macro _CORE_VARS"] %}
  {% set clean_vars = printer["gcode_macro _CLEAN_VARIABLES"] %}
  {% set ceal = printer["gcode_macro CUSTOM_EXPANSION_ACTIVE_LIST"] %}
  {% set temp = params.TEMP|default(250)|float %}
  {% set speed = params.SPEED_MMsec|default(7)|float * 60 %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity|int * 60 %}

    SET_GCODE_VARIABLE MACRO=_POOP_VARIABLES VARIABLE=unload_clean VALUE=False
    _MAX_EXTRUDE_CHECK

  {% if clean_vars.use_random_spot == True %}
    _RANDOM_GEN
  {% endif %}
    
  {% if clean_vars.have_you_set_this_up != True %}
   {action_raise_error("This error is caused by you not setting up this feature before first use. Check demon_user_settings_cleaner_variables file & set this feature up correctly for your printer!")}

  {% elif printer.print_stats.state in ['printing', 'paused'] %}
    RESPOND TYPE=error MSG="Request denied, current printer state is printing/paused"
  
  {% else %}
    
    {% if start_vars.nozzle_cleaner == True and start_vars.purge_bucket == True %}
      SAVE_GCODE_STATE NAME=load_clean_state
      _RUNOUT_SENSOR_CHECK
      M400

      {% if ceal.ceal_master_enable == True %}
        {% if ceal.pre_load_clean == True %}
          _CUSTOM_PRE_LOAD_CLEAN {rawparams}
        {% endif %}
      {% endif %}

      {% if start_vars.neopixel_led == True %}
        STATUS_HEATING
      {% endif %}
    
      SET_DISPLAY_TEXT MSG="Pre-heating nozzle for LOAD_CLEAN..."
      RESPOND TYPE=ECHO MSG="Pre-heating nozzle for LOAD_CLEAN..."
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={clean_vars.nozzle_pre_temp|int}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={clean_vars.nozzle_pre_temp|int - 5} MAXIMUM={clean_vars.nozzle_pre_temp|int + 50}

      _CONDITIONAL_HOME

      G90
      M83
      {% if start_vars.neopixel_led == True %}
        STATUS_READY
      {% endif %}
    

      {% if printer.toolhead.position.z|float < 20 %}
        G0 Z20 F3600
      {% endif %}

      {% if clean_vars.poop_n_shoot == True %}
        SET_DISPLAY_TEXT MSG="POOP_N_SHOOT mode on!"
        RESPOND TYPE=ECHO MSG="POOP_N_SHOOT mode on!"
        _GO_POOP
        M400
   
      {% else %}
        _random_spot
        G0 Z{clean_vars.purge_legacy_z_park|float} F3000                      # park to purge
        M400
      {% endif %}

      {% if start_vars.neopixel_led == True %}
        STATUS_HEATING
      {% endif %}
    
      {% if 'TEMP' in params %}
        {% if temp < printer.configfile.settings['extruder'].min_extrude_temp %}
          SET_DISPLAY_TEXT MSG="Requested Load_Clean temp too low, using default 250c"
          RESPOND TYPE=ECHO MSG="Requested Load_Clean temp too low, using default 250c"
          SET_HEATER_TEMPERATURE HEATER=extruder TARGET=250
          TEMPERATURE_WAIT SENSOR=extruder MINIMUM=248 MAXIMUM=255

        {% else %}
          SET_DISPLAY_TEXT MSG="Load hotend heating to {temp}c"
          RESPOND TYPE=ECHO MSG="Load hotend heating to {temp}c"
          SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp} 
          TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp|int -2} MAXIMUM={temp|int + 5}        
        {% endif %}

      {% else %}
        SET_DISPLAY_TEXT MSG="Load hotend heating to {temp}c"
        RESPOND TYPE=ECHO MSG="Load hotend heating to {temp}c"
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp} 
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp|int -2} MAXIMUM={temp|int + 5}
      {% endif %}

        M117

      {% if clean_vars.poop_n_shoot == True %}
        _POOP_MANAGER
        _POOP_N_SHOOT_MODE
      
      {% elif clean_vars.poop_n_shoot == False %}
        M106 S255                                                # Fans to max.
        SET_DISPLAY_TEXT MSG="LOADING..."
        RESPOND TYPE=ECHO MSG="LOADING..."
        
        {% if start_vars.neopixel_led == True %}
          STATUS_PRINTING
        {% endif %}

        _ENCODER_FEED_CHECK_PREP
  
        G92 E0                                                   # reset extruder
        G1 E{clean_vars.load_clean_load_dist|float} F{max_velocity|int}   # Max extrude only speed 
        M400
        
        _ENCODER_FEED_CHECK
  
        G1 E{clean_vars.load_clean_purge_dist|float} F{speed|int}                    # fast purge
        G4 P10000
  
        _random_spot

        M107                                                     # fans off
        # M106 S255                                                # Fans to max.
        G1 E-5 F300                                              # slow retract 
        G4 P10000
   
        _random_spot
    
        M106 S255                                                # Fans to max.
    
        M400                                                     # wait for all moves to complete 
 
        {% if start_vars.neopixel_led == True %}
          STATUS_HEATING
        {% endif %}

        SET_GCODE_VARIABLE MACRO=_POOP_VARIABLES VARIABLE=loaded_already VALUE=True
        SAVE_VARIABLE VARIABLE=loaded_state VALUE=True
      {% endif %}

      {% if clean_vars.poop_n_shoot == True %}
        {% if clean_vars.clean_after_shooting == True %}
          _SETUP_N_CLEAN
        {% endif %}

      {% else %}
        _SETUP_N_CLEAN
      {% endif %}
    
      M400
      M117

      SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
      {% if start_vars.neopixel_led == True %}
        STATUS_READY
      {% endif %}

      {% if start_vars.runout_sensor == True %}
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
      {% endif %}

      {% if ceal.ceal_master_enable == True %}
        {% if ceal.post_load_clean == True %}
          _CUSTOM_POST_LOAD_CLEAN {rawparams}
        {% endif %}
      {% endif %}

      SET_DISPLAY_TEXT MSG="LOAD_CLEAN operation complete!"
      RESPOND TYPE=ECHO MSG="LOAD_CLEAN operation complete!"
      
      # SET_GCODE_VARIABLE MACRO=_POOP_VARIABLES VARIABLE=loaded_already VALUE=True
      # SAVE_VARIABLE VARIABLE=loaded_state VALUE=True
      RESTORE_GCODE_STATE NAME=load_clean_state
      _SAVE

    {% else %}
      {action_raise_error("This error is caused by the nozzle_cleaner & purge_bucket both not being enabled Check demon_user_settings_cleaner_variables file!")}
    {% endif %}
  {% endif %}


  
[gcode_macro UNLOAD_CLEAN]
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  {% set clean_vars = printer["gcode_macro _CLEAN_VARIABLES"] %}
  {% set ceal = printer["gcode_macro CUSTOM_EXPANSION_ACTIVE_LIST"] %}
  {% set temp = params.TEMP|default(250)|float %}
  {% set speed = params.SPEED_MMsec|default(7)|float * 60 %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity|int * 60 %}

    SET_GCODE_VARIABLE MACRO=_POOP_VARIABLES VARIABLE=unload_clean VALUE=True
    _MAX_EXTRUDE_CHECK

  {% if clean_vars.use_random_spot == True %}
    _RANDOM_GEN
  {% endif %}

  {% if clean_vars.have_you_set_this_up != True %}
    {action_raise_error("This error is caused by you not setting up this feature before first use. Check demon_user_settings file & set this feature up correctly for your printer!")}

  {% elif printer.print_stats.state in ['printing', 'paused'] %}
    RESPOND TYPE=error MSG="Request denied, current printer state is printing/paused"
  
  {% else %}

    {% if start_vars.nozzle_cleaner == True and start_vars.purge_bucket == True %}
      SAVE_GCODE_STATE NAME=unload_clean_state
      _RUNOUT_SENSOR_CHECK
      M400

      {% if ceal.ceal_master_enable == True %}
        {% if ceal.pre_unload_clean == True %}
          _CUSTOM_PRE_LOAD_CLEAN {rawparams}
        {% endif %}
      {% endif %}

      {% if start_vars.neopixel_led == True %}
        STATUS_HEATING
      {% endif %}
    
      M117 HEATING...
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={clean_vars.nozzle_pre_temp|int}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={clean_vars.nozzle_pre_temp|int - 5} MAXIMUM={clean_vars.nozzle_pre_temp|int + 50}
    
      _CONDITIONAL_HOME

      {% if start_vars.runout_sensor == True %}
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
      {% endif %}
  
      G90
      M83
      {% if start_vars.neopixel_led == True %}
        STATUS_READY
      {% endif %}  
    

      {% if printer.toolhead.position.z|float < 20 %}
        G0 Z20 F3600
      {% endif %}  

      {% if clean_vars.poop_n_shoot == True and clean_vars.only_for_loading == False %}
        SET_DISPLAY_TEXT MSG="POOP_N_SHOOT mode on!"
        RESPOND TYPE=ECHO MSG="POOP_N_SHOOT mode on!"
        _GO_POOP
        M400
   
      {% else %}
        _random_spot
        G0 Z{clean_vars.purge_legacy_z_park|float} F3000                      # park to purge
        M400
      {% endif %}
      
      {% if start_vars.neopixel_led == True %}
        STATUS_HEATING
      {% endif %}  

      {% if 'TEMP' in params %}
        {% if temp < printer.configfile.settings['extruder'].min_extrude_temp %}
          SET_DISPLAY_TEXT MSG="Requested Unload_Clean temp too low, using default 250c"
          RESPOND TYPE=ECHO MSG="Requested Unload_Clean temp too low, using default 250c"
          SET_HEATER_TEMPERATURE HEATER=extruder TARGET=250
          TEMPERATURE_WAIT SENSOR=extruder MINIMUM=248 MAXIMUM=255

        {% else %}
          SET_DISPLAY_TEXT MSG="Unload hotend heating to {temp}c"
          RESPOND TYPE=ECHO MSG="Unload hotend heating to {temp}c"
          SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp} 
          TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp|int -2} MAXIMUM={temp|int + 5}        
        {% endif %}

      {% else %}
        SET_DISPLAY_TEXT MSG="Unload hotend heating to {temp}c"
        RESPOND TYPE=ECHO MSG="Unload hotend heating to {temp}c"
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp} 
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp|int -2} MAXIMUM={temp|int + 5}
      {% endif %}

        M117

      {% if clean_vars.poop_n_shoot == True and clean_vars.only_for_loading == False %}
        _POOP_MANAGER
        _POOP_N_SHOOT_MODE
      
      {% elif clean_vars.poop_n_shoot == False or clean_vars.only_for_loading == True %}
        {% if clean_vars.only_for_loading == True %}
          RESPOND TYPE=COMMAND MSG="Unload using legacy purge mode..."
        {% endif %}
        
        SET_DISPLAY_TEXT MSG="UNLOADING..."
        RESPOND TYPE=ECHO MSG="UNLOADING..."
        {% if start_vars.neopixel_led == True %}
          STATUS_PRINTING
        {% endif %}

        _ENCODER_FEED_CHECK_PREP
    
        G92 E0                                                   # reset extruder
        G1 E{clean_vars.unload_clean_purge_dist|float} F{speed|int}                        # fast purge 
        M400

        _ENCODER_FEED_CHECK
      
        G4 P5000
        _random_spot
        M400

        {% if ('buffer_stepper filament_buffer' in printer.configfile.config) %} ####################
          SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=True
          SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=False
          M400
          G1 E-{clean_vars.unload_clean_unload_dist|float} F{max_velocity|int}    # Max extrude only speed
          BUFFER_STEPPER STEPPER=filament_buffer MOVE=-{start_vars.unload_clean_unload_dist|float} SPEED={max_velocity|int / 60} SYNC=1
          M400
          SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=False
          SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=True
          
        {% else %}
          G1 E-{clean_vars.unload_clean_unload_dist|float} F{max_velocity|int}    # Max extrude only speed
        {% endif %}
        
        M106 S255                                                # Fans to max.
        G4 P5000
        
        _random_spot
    
        M400                                                     # wait for all moves to complete 
        M117 Post Unload Cooling...
        {% if start_vars.neopixel_led == True %}
          STATUS_HEATING
        {% endif %}
        
        SET_GCODE_VARIABLE MACRO=_POOP_VARIABLES VARIABLE=unload_clean VALUE=False
        SET_GCODE_VARIABLE MACRO=_POOP_VARIABLES VARIABLE=loaded_already VALUE=False
        SAVE_VARIABLE VARIABLE=loaded_state VALUE=False
      {% endif %}

      {% if clean_vars.poop_n_shoot == True and clean_vars.only_for_loading == False %}
        {% if clean_vars.clean_after_shooting == True %}
          _SETUP_N_CLEAN
        {% endif %}

      {% else %}
        _SETUP_N_CLEAN
      {% endif %}
    
      M400
      M117
       
      # TURN_OFF_HEATERS
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
      
      {% if start_vars.neopixel_led == True %}
        STATUS_READY
      {% endif %}

      {% if start_vars.runout_sensor == True %}  
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
      {% endif %}

      {% if ceal.ceal_master_enable == True %}
        {% if ceal.post_unload_clean == True %}
           _CUSTOM_POST_UNLOAD_CLEAN {rawparams}
        {% endif %}
      {% endif %}

      SET_DISPLAY_TEXT MSG="UNLOAD_CLEAN operation complete!"
      RESPOND TYPE=ECHO MSG="UNLOAD_CLEAN operation complete!"

      # SET_GCODE_VARIABLE MACRO=_POOP_VARIABLES VARIABLE=unload_clean VALUE=False
      # SET_GCODE_VARIABLE MACRO=_POOP_VARIABLES VARIABLE=loaded_already VALUE=False
      # SAVE_VARIABLE VARIABLE=loaded_state VALUE=False
      RESTORE_GCODE_STATE NAME=unload_clean_state
      _SAVE

      {% if ('buffer_stepper filament_buffer' in printer.configfile.config) %}  ####################
       _FEED_OUT_PROMPT
      {% endif %}

    {% else %}
      {action_raise_error("This error is caused by the nozzle_cleaner & purge_bucket both not being enabled. Check demon_user_settings_cleaner_variables file!")}
    {% endif %}
  {% endif %}



[gcode_macro _SETUP_N_CLEAN]
gcode:
  {% set clean_vars = printer["gcode_macro _CLEAN_VARIABLES"] %}
  
    SET_DISPLAY_TEXT MSG="Waiting for cleaning temperature..."
    RESPOND TYPE=ECHO MSG="Waiting for cleaning temperature..."
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={clean_vars.nozzle_post_temp|int}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={clean_vars.nozzle_post_temp|int - 5} MAXIMUM={clean_vars.nozzle_post_temp|int + 10}
    
    M107                                                     # fans off
    SET_DISPLAY_TEXT MSG="WARNING Nozzle Cleaning 5 Seconds..."
    RESPOND TYPE=ECHO MSG="WARNING Nozzle Cleaning 5 Seconds..."
    G4 P5000                                                 # 5 second wait
    CLEAN_NOZZLE



[gcode_macro _POOP_N_SHOOT_MODE]
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  {% set clean_vars = printer["gcode_macro _CLEAN_VARIABLES"] %}
  {% set poop_vars = printer["gcode_macro _POOP_VARIABLES"]%}
  
    {% if clean_vars.poop_n_shoot == True %}
      SET_DISPLAY_TEXT MSG="Pooping...!"
      RESPOND TYPE=ECHO MSG="Pooping...!"
      {% if start_vars.neopixel_led == True %}
        STATUS_PRINTING
      {% endif %}

      _POOP_CONTROL

      {% if clean_vars.heater_on_for_wipe == False %}
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={clean_vars.nozzle_post_temp|int}
      {% endif %}
      
      # G4 P{clean_vars.pause_for_wipe_away|int * 1000}

      {% if clean_vars.slow_rise_pre_wipe|float > 0 %}
        G91
        G0 Z{clean_vars.slow_rise_pre_wipe|float} F8
        G90
      {% endif %}

      G4 P{clean_vars.pause_for_wipe_away|int * 1000}
      
      G91
      G0 Z5 F9000
      G4 P1000
      # G0 Z-5 F9000
      # G0 Z{clean_vars.wipe_away_from_poop_z|float} F{clean_vars.wipe_away_from_poop_speed|int * 60}
      G0 X{clean_vars.wipe_away_from_poop_x|float} Y{clean_vars.wipe_away_from_poop_y|float} Z{clean_vars.wipe_away_from_poop_z|float} F{clean_vars.wipe_away_from_poop_speed|int * 60}
      G90
      M83
      G92 E0
      M400

      {% if clean_vars.heater_on_for_wipe == True %}
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={clean_vars.poop_shooting_temp|int}
      {% endif %}

      {% if clean_vars.shoot_poop_along_x == True %}
        {% if clean_vars.use_random_spot == True %}
          G0 Y{poop_vars.random_spot_y|int} F{clean_vars.clean_travel_speed|int * 60}
        {% else %}
          G0 Y{clean_vars.purge_y_park|float} F{clean_vars.clean_travel_speed|int * 60}
        {% endif %}

      {% elif clean_vars.shoot_poop_along_x == False %}
        {% if clean_vars.use_random_spot == True %}
          G0 X{poop_vars.random_spot_x|int} F{clean_vars.clean_travel_speed|int * 60}
        {% else %}
          G0 X{clean_vars.purge_x_park|float} F{clean_vars.clean_travel_speed|int * 60}
        {% endif %}
      {% endif %}
      
      M106 S{clean_vars.post_poop_fan_speed|float * 255}
      G4 P8000

      {% if clean_vars.wait_to_clean == True %}
        SET_DISPLAY_TEXT MSG="Waiting for cleaning temperature..."
        RESPOND TYPE=ECHO MSG="Waiting for cleaning temperature..."
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={clean_vars.nozzle_post_temp|int}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={clean_vars.nozzle_post_temp|int - 5} MAXIMUM={clean_vars.nozzle_post_temp|int + 10}
      {% endif %}
    
        SET_GCODE_VARIABLE MACRO=_POOP_VARIABLES VARIABLE=omit_clean_park VALUE=True
        CLEAN_NOZZLE
        M400
        SET_GCODE_VARIABLE MACRO=_POOP_VARIABLES VARIABLE=omit_clean_park VALUE=False

      {% if start_vars.neopixel_led == True %}
        STATUS_HEATING
      {% endif %}

      {% if clean_vars.use_random_spot == True %}
        {% if clean_vars.shoot_poop_along_x == True %}
          G0 X{clean_vars.park_to_shoot_poop_x|int} Y{poop_vars.random_spot_y|float} Z{clean_vars.park_to_shoot_poop_z|float} F{clean_vars.clean_travel_speed|int * 60}
          
        {% elif clean_vars.shoot_poop_along_x == False %}
          G0 X{poop_vars.random_spot_x|int} Y{clean_vars.park_to_shoot_poop_y|float} Z{clean_vars.park_to_shoot_poop_z|float} F{clean_vars.clean_travel_speed|int * 60}
        {% endif %}

      {% else %}
        G0 X{clean_vars.park_to_shoot_poop_x|float} Y{clean_vars.park_to_shoot_poop_y|float} Z{clean_vars.park_to_shoot_poop_z|float} F{clean_vars.clean_travel_speed|int * 60}
      {% endif %}
      
      # M106 S255
      
      SET_DISPLAY_TEXT MSG="Waiting for poop shooting temperature..."
      RESPOND TYPE=ECHO MSG="Waiting for poop shooting temperature..."
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={clean_vars.poop_shooting_temp|int}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={clean_vars.poop_shooting_temp|int - 5} MAXIMUM={clean_vars.poop_shooting_temp|int + 2}
      M107
      
      SET_DISPLAY_TEXT MSG="Shooting poop...!"
      RESPOND TYPE=ECHO MSG="Shooting poop...!"
      G0 Z{clean_vars.shoot_poop_z|float} F3000
      
      {% if clean_vars.shoot_poop_along_x == False %}
        G91
        G0 Y{clean_vars.shoot_poop_y|float} F{clean_vars.shoot_poop_speed|int * 60}
        G90
        
      {% elif clean_vars.shoot_poop_along_x == True %}
        G91
        G0 X{clean_vars.shoot_poop_x|float} F{clean_vars.shoot_poop_speed|int * 60}
        G90
      {% endif %}

      G0 Z{clean_vars.post_shooting_poop_z|float} F{clean_vars.clean_travel_speed|int * 60}
      G0 X{clean_vars.post_shooting_poop_x|float} Y{clean_vars.post_shooting_poop_y|float} F{clean_vars.clean_travel_speed|int * 60}

    {% else %}
      {action_raise_error("This error is caused by park_and_poop mode not being enabled. Check demon_user_settings_cleaner_variables file!")}
    {% endif %}



[gcode_macro _RANDOM_GEN]
gcode:
  {% set clean_vars = printer["gcode_macro _CLEAN_VARIABLES"] %}
  {% set random_lo = (clean_vars.random_spot_range|int / 2) - clean_vars.random_spot_range|int %}
  {% set random_hi = (clean_vars.random_spot_range|int / 2) %}
  {% set random_x = range((random_lo|int), (random_hi|int))|random %}
  {% set random_y = range((random_lo|int), (random_hi|int))|random %}

  {% if clean_vars.shoot_poop_along_x == True %}
    SET_GCODE_VARIABLE MACRO=_POOP_VARIABLES VARIABLE=random_spot_y VALUE={(clean_vars.purge_y_park|int + random_y|int)}
  {% else %}
    SET_GCODE_VARIABLE MACRO=_POOP_VARIABLES VARIABLE=random_spot_x VALUE={(clean_vars.purge_x_park|int + random_x|int)}
  {% endif %}
  
  # M118 random x = {random_x}
  # M118 random y = {random_y}
    


[gcode_macro _GO_POOP]
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  {% set clean_vars = printer["gcode_macro _CLEAN_VARIABLES"] %}
  {% set poop_vars = printer["gcode_macro _POOP_VARIABLES"]%}

  {% if printer.configfile.settings.printer.kinematics == 'corexy' and ('quad_gantry_level' in printer.configfile.config) %}
    {% if printer.quad_gantry_level.applied == False %}
      SET_DISPLAY_TEXT MSG="Machine NOT levelled! Levelling gantry!" 
      RESPOND TYPE=COMMAND MSG="Machine NOT levelled! Levelling gantry to help prevent any possible print surface damage!" 
      {% if start_vars.neopixel_led == True %}
        STATUS_LEVELING
      {% endif %}
      # QUAD_GANTRY_LEVEL RETRY_TOLERANCE=0.3
      _QGL
      {% if (printer.configfile.config.stepper_z.endstop_pin == 'probe:z_virtual_endstop') or (printer.configfile.config.stepper_z.endstop_pin == 'probe: z_virtual_endstop') %}
        _Z_PARK
      {% endif %}
      G28 Z
      M400
      {% if start_vars.neopixel_led == True %}
        STATUS_READY
      {% endif %}
    {% endif %}
  {% endif %}

  {% if clean_vars.use_random_spot == True %}
    {% if clean_vars.shoot_poop_along_x == True %}
      G0 X{clean_vars.purge_x_park|float} Y{poop_vars.random_spot_y|int} F{clean_vars.clean_travel_speed|int * 60}
    {% elif clean_vars.shoot_poop_along_x == False %}
      G0 X{poop_vars.random_spot_x|int} Y{clean_vars.purge_y_park|float} F{clean_vars.clean_travel_speed|int * 60}
    {% endif %}

    SET_DISPLAY_TEXT MSG="Random park spot generated!"
    RESPOND TYPE=COMMAND MSG="Random park spot generated!"
    
  {% else %}
    G0 X{clean_vars.purge_x_park|float} Y{clean_vars.purge_y_park|float} F{clean_vars.clean_travel_speed|int * 60}
  {% endif %}

    G0 Z{clean_vars.park_to_poop_z|float +3} F900
    G0 Z{clean_vars.park_to_poop_z|float} F120

    

[gcode_macro _POOP_CONTROL]
gcode:
  {% set clean_vars = printer["gcode_macro _CLEAN_VARIABLES"] %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity|int * 60 %}
  {% set poop_vars = printer["gcode_macro _POOP_VARIABLES"]%}

    _ENCODER_FEED_CHECK_PREP

  {% if poop_vars.unload_clean == False %}
    {% if poop_vars.loaded_already == False %}
      SET_DISPLAY_TEXT MSG="Full load...!"
      RESPOND TYPE=ECHO MSG="Full load...!"
      G1 E{clean_vars.load_clean_load_dist|float} F{max_velocity|int}
      M400
      SET_GCODE_VARIABLE MACRO=_POOP_VARIABLES VARIABLE=loaded_already VALUE=True
      SAVE_VARIABLE VARIABLE=loaded_state VALUE=True
          
    {% else %}
      RESPOND TYPE=COMMAND MSG="Already fully loaded so just gonna poop!"
    {% endif %}
  {% endif %}
        
    G91
  {% if clean_vars.extra_pre_poop_purge == True %}
    G1 Z0.1 E15 F8
  {% endif %}

    G1 Z0.5 E{(clean_vars.poop_flow_rate|float / 100) * 12} F8
    G1 Z3 E{(clean_vars.poop_flow_rate|float / 100) * 15} F28
    _ENCODER_FEED_CHECK
    G1 Z2 E{(clean_vars.poop_flow_rate|float / 100) * 18} F35

  {% if clean_vars.fan_while_pooping == True %}
    M106 S{clean_vars.pooping_fan_speed|float * 255}
  {% endif %}
      
    G1 Z2 E{(clean_vars.poop_flow_rate|float / 100) * 25} F200
    # G4 P2000
    M400
    G90
    M83

  {% if ('buffer_stepper filament_buffer' in printer.configfile.config) %} ####################
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=True
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=False
    M400
    G1 E-5 F{max_velocity|int}
    BUFFER_STEPPER STEPPER=filament_buffer MOVE=-5 SPEED={max_velocity|int / 60} SYNC=1
    M400
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=True
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=False

  {% else %}
    G1 E-5 F{max_velocity|int}
  {% endif %}
  
  {% if poop_vars.unload_clean == True %}
    SET_DISPLAY_TEXT MSG="Full unload...!"
    RESPOND TYPE=ECHO MSG="Full unload...!"
    G4 P{clean_vars.pause_for_full_unload|int * 1000}
    M400

    {% if ('buffer_stepper filament_buffer' in printer.configfile.config) %} ####################
      SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=True
      SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=False
      M400
      G1 E-{clean_vars.unload_clean_unload_dist|float} F{max_velocity|int}
      BUFFER_STEPPER STEPPER=filament_buffer MOVE=-{clean_vars.unload_clean_unload_dist|float} SPEED={max_velocity|int / 60} SYNC=1
      M400
      SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=True
      SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=False
      
    {% else %}
      G1 E-{clean_vars.unload_clean_unload_dist|float} F{max_velocity|int}
    {% endif %}
        
    M400
    SET_GCODE_VARIABLE MACRO=_POOP_VARIABLES VARIABLE=unload_clean VALUE=False
    SET_GCODE_VARIABLE MACRO=_POOP_VARIABLES VARIABLE=loaded_already VALUE=False
    SAVE_VARIABLE VARIABLE=loaded_state VALUE=False
  {% endif %}
      


[gcode_macro _POOP_MANAGER]
gcode:
  {% set clean_vars = printer["gcode_macro _CLEAN_VARIABLES"] %}

  {% if clean_vars.wipe_away_from_poop_x|float > 100 %}
    RESPOND TYPE=ERROR MSG="NOTICE: Value for wipe_away_from_poop_x is too great, reduced to 100mm"
    SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=wipe_away_from_poop_x VALUE=100

  {% elif clean_vars.wipe_away_from_poop_x|float < -100 %}
    RESPOND TYPE=ERROR MSG="NOTICE: Value for wipe_away_from_poop_x is too great, reduced to -100mm"
    SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=wipe_away_from_poop_x VALUE=-100
  {% endif %}

  {% if clean_vars.wipe_away_from_poop_y|float > 100 %}
    RESPOND TYPE=ERROR MSG="NOTICE: Value for wipe_away_from_poop_y is too great, reduced to 100mm"
    SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=wipe_away_from_poop_y VALUE=100
 
  {% elif clean_vars.wipe_away_from_poop_y|float < -100 %}
    RESPOND TYPE=ERROR MSG="NOTICE: Value for wipe_away_from_poop_xyis too great, reduced to -100mm"
    SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=wipe_away_from_poop_y VALUE=-100
  {% endif %}

  {% if clean_vars.wipe_away_from_poop_z|float > 10 %}
    RESPOND TYPE=ERROR MSG="NOTICE: Value for wipe_away_from_poop_z is too high, reduced to 10mm"
    SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=wipe_away_from_poop_z VALUE=10

  {% elif clean_vars.wipe_away_from_poop_z|float < 1 %}
    RESPOND TYPE=ERROR MSG="NOTICE: Value for wipe_away_from_poop_z is negative, it is not possible to move lower for your wipe!"
    SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=wipe_away_from_poop_z VALUE=1
  {% endif %}
  
  {% if clean_vars.shoot_poop_z|float < clean_vars.park_to_poop_z|float %}
    RESPOND TYPE=ERROR MSG="NOTICE: Value for shoot_poop_z is less than your park_to_poop_z height! It is not possible to move lower to shoot your poop!"
    SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=shoot_poop_z VALUE={clean_vars.park_to_poop_z|float + 2}
  {% endif %}

    {% if clean_vars.park_to_shoot_poop_z|float < clean_vars.park_to_poop_z|float %}
    RESPOND TYPE=ERROR MSG="NOTICE: Value for park_to_shoot_poop_z is less than your park_to_poop_z height! It is not possible to move lower to park to shoot your poop!"
    SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=park_to_shoot_poop_z VALUE={clean_vars.park_to_poop_z|float + 4}
  {% endif %}

  {% if clean_vars.shoot_poop_along_x == False %}
    {% if clean_vars.shoot_poop_y|float > 100 %}
      RESPOND TYPE=ERROR MSG="NOTICE: Value for shoot_poop_y is too great, reduced to 100mm"
      SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=shoot_poop_y VALUE=100
      
    {% elif clean_vars.shoot_poop_y |float < -100 %}
      RESPOND TYPE=ERROR MSG="NOTICE: Value for shoot_poop_y is too great, reduced to -100mm"
      SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=shoot_poop_y VALUE=-100  
    {% endif %}
  {% endif %}

  {% if clean_vars.shoot_poop_along_x == True %}    
    {% if clean_vars.shoot_poop_x|float > 100 %}
      RESPOND TYPE=ERROR MSG="NOTICE: Value for shoot_poop_x is too great, reduced to 100mm"
      SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=shoot_poop_x VALUE=100

    {% elif clean_vars.shoot_poop_x |float < -100 %}
      RESPOND TYPE=ERROR MSG="NOTICE: Value for shoot_poop_x is too great, reduced to -100mm"
      SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=shoot_poop_x VALUE=-100
    {% endif %}
  {% endif %}

  {% if clean_vars.poop_flow_rate > 200 %}
    RESPOND TYPE=ERROR MSG="NOTICE: Value for poop_flow_rate is too great, reduced to 200%"
    SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=poop_flow_rate VALUE=200

  {% elif clean_vars.poop_flow_rate |float < 10 %}
    RESPOND TYPE=ERROR MSG="NOTICE: Value for poop_flow_rate is too small, reduced to 10%"
    SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=shoot_poop_x VALUE=10
  {% endif %}

  {% if clean_vars.pooping_fan_speed|float > 1.0 %}
    RESPOND TYPE=ERROR MSG="NOTICE: Value for pooping_fan_speed is too great, resetting to 100%"
    SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=pooping_fan_speed VALUE=1.0

  {% elif clean_vars.pooping_fan_speed|float < 0.1 %}
    RESPOND TYPE=ERROR MSG="NOTICE: Value for pooping_fan_speed is too low, resetting to 10%"
    SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=pooping_fan_speed VALUE=0.1
  {% endif %}

  {% if clean_vars.post_poop_fan_speed|float > 1.0 %}
    RESPOND TYPE=ERROR MSG="NOTICE: Value for post_poop_fan_speed is too great, resetting to 100%"
    SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=post_poop_fan_speed VALUE=1.0

  {% elif clean_vars.post_poop_fan_speed|float < 0.1 %}
    RESPOND TYPE=ERROR MSG="NOTICE: Value for post_poop_fan_speed is too low, resetting to 10%"
    SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=post_poop_fan_speed VALUE=0.1
  {% endif %}

  {% if clean_vars.slow_rise_pre_wipe|float > 5.0 %}
    RESPOND TYPE=ERROR MSG="NOTICE: Value for slow_rise_pre_wipe is too great, resetting to 5mm"
    SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=slow_rise_pre_wipe VALUE=5.0

  {% elif clean_vars.slow_rise_pre_wipe|float < 0 %}
    RESPOND TYPE=ERROR MSG="NOTICE: Value for slow_rise_pre_wipe is too low, resetting to 0mm"
    SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=slow_rise_pre_wipe VALUE=0.0
  {% endif %}

  {% if clean_vars.pause_for_wipe_away|int > 25 %}
    RESPOND TYPE=ERROR MSG="NOTICE: Value for clean_vars.pause_for_wipe_away is too great, resetting to 25 seconds"
    SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=clean_vars.pause_for_wipe_away VALUE=25.0

  {% elif clean_vars.pause_for_wipe_away|int < 0 %}
    RESPOND TYPE=ERROR MSG="NOTICE: Value for pause_for_wipe_away is too low, resetting to 0mm"
    SET_GCODE_VARIABLE MACRO=_CLEAN_VARIABLES VARIABLE=pause_for_wipe_away VALUE=0.0
  {% endif %}



[gcode_macro _POOP_VARIABLES]
variable_loaded_already: False
variable_unload_clean: False
variable_omit_clean_park: False
variable_random_spot_x: 35
variable_random_spot_y: 35

gcode:



[gcode_macro _READ_POOP_VARS]
gcode:
  {% set poop_vars = printer["gcode_macro _POOP_VARIABLES"]%}
    m118 ranspot x {poop_vars.random_spot_x}
    m118 ranspot y {poop_vars.random_spot_y}


[gcode_macro _SET_LOADED]
gcode:

  SET_GCODE_VARIABLE MACRO=_POOP_VARIABLES VARIABLE=loaded_already VALUE=True

  

[gcode_macro _CLEAN_LOAD_VERSION]
variable_demon_clean_load: "1.9.8"
gcode:



